#!/usr/bin/env python 
#
# Copyright (c) 2014, Arista Networks, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#  - Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#  - Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#  - Neither the name of Arista Networks nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ARISTA NETWORKS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#pylint: disable=W0702

import re
import urllib

BOOT_CONFIG = '/mnt/flash/boot-config'

def main(attributes): 
    '''Installs software image on the switch.

    If the current software image is the same as the  
    'software_version' attribute value, then this action
    is a no-op.  Otherwise, the action will replace the existing software 
    image.

    Args:
       attributes: list of attributes; use attributes.get(<ATTRIBUTE_NAME>)
                   to read attribute values

       Special attributes:
           node: attributes.get('NODE')
                 API: see documentation

    Returns:
        0 - success
        1 - missing attribute('software_url')
        2 - missing attribute('software_version')
        3 - unable to retrieve image file from URL

    Raises:
        None
    '''

    url = attributes.get('software_url')
    if not url:
        return 1

    software_version = attributes.get('software_version')
    if not software_version:
        return 2
    
    node = attributes.get('NODE')
    current_version = \
        node.api_enable_cmds(['show version'])[0]['version']
    if current_version == software_version:
        return

    image = '%s.swi' % software_version
    try:
        urllib.urlretrieve(url, '%s/%s' % (node.flash(), image))
    except:
        return 3

    boot_line = '! boot system flash:/%s' % image
    if node.has_startup_config():
        startup_config = open(node.startup_config(), 'r')
        lines = startup_config.readlines()
        startup_config.close()
        
        startup_config = open(node.startup_config(), 'w')
        for line in lines:
            if re.search('! boot system', line):
                startup_config.write(boot_line)
            else:
                startup_config.write(line)                    
        startup_config.close()
    else:
        node.append_startup_config_lines([boot_line])

    boot_line = 'SWI=flash:/%s\n' % image
    boot_file = open(BOOT_CONFIG, 'w')
    boot_file.write(boot_line)
    boot_file.close()

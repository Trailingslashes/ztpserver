#!/usr/bin/env python
#
# Copyright (c) 2015, Arista Networks, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#  - Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#  - Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#  - Neither the name of Arista Networks nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ARISTA NETWORKS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#pylint: disable=W0703,W0402,E1103

import os
import re
import pwd
import grp
import crypt
import subprocess

TEMP_FILE = '/tmp/tmp-pub-key'
DEFAULT_ROOT = '/persist/local/'
DEFAULT_USER = 'ansible'
DEFAULT_GROUP = 'eosadmin'


def main(attributes):
    '''Configure SSH Keys on your node to enable faster
    Ansible integration

    Attributes:
        user: username used by Ansible server to SSH into node
            (default = ansible)
        group: group assigned to user above
            (default = eosadmin)
        root: directory assigned to user
            (default = /persist/local/)
        key: location of public ssh key to be written to authorized_keys


    Special_attributes:
        NODE: API object - see documentation for details

    Example:
        ::

          -
            action: configure_ansible_client
            attributes:
              user: ansible
              group: eosadmin
              root: /persist/local
              key: files/ssh/ansible_id_rsa.pub
            name: "Configure Ansible SSH Keys"
    '''

    node = attributes.get('NODE')
    url = attributes.get('key')
    user = attributes.get('user')
    group = attributes.get('group')
    root = attributes.get('root')
    public_keys = None

    if not user:
        user = DEFAULT_USER

    if not group:
        group = DEFAULT_GROUP

    if not root:
        root = DEFAULT_ROOT

    if url:
        try:
            node.retrieve_url(url, TEMP_FILE)
            public_keys = open(TEMP_FILE, 'r').read()
        except Exception, e:
            raise Exception('Unable to retrieve config from URL (%s)' % e)

    passwd = 'password'
    enc_passwd = crypt.crypt(passwd,"22")

    try:
        node.create_user(user, group, enc_passwd, root, public_keys)
    except Exception, e:
        raise Exception(e)
    

    # Only remove this in case everything else succeeded
    # for debugging purposes
    os.remove(TEMP_FILE)

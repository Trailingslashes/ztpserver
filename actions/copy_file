#!/usr/bin/env python
#
# Copyright (c) 2014, Arista Networks, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#  - Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#  - Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#  - Neither the name of Arista Networks nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ARISTA NETWORKS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#pylint: disable=W0702

BACKUP_SUFFIX = '.backup'
PERSISTENT_DIR = '/mnt/flash/.ztp-files'
OVERWRITE_VALUES = ['backup', 'replace', 'if-missing']

import os
import urllib
import shutil

def main(attributes):
    '''Copies file to the switch.

    Copies file based on the values of 'src_url' and
    'dst_url' attributes.  The 'src_url' attribute should
    provide the full path to the file to be copied and
    the 'dst_url' should provide the destination folder
    to copy the file into.

    If 'overwrite' is set to:
       - 'replace': the file is copied to the switch regardless
         of whether there is already a file with the same name at the
         destination;
       - 'if-missing': the file is copied to the switch only if
          is not already present in the file system
       - 'backup': the file is copied to the switch; if there is
         already another file at the destination, that file is renamed
         by appending the '.backup' suffix
    If 'overwrite' is not set, then 'replace' is the default
    behaviour.

    Args:
       attributes: list of attributes; use attributes.get(<ATTRIBUTE_NAME>)
                   to read attribute values

       Special attributes:
           node: attributes.get('NODE')
                 API: see documentation

    Returns:
        0 - success
        1 - missing attribute('src_url')
        2 - missing attribute('dst_url')
        3 - erroneous 'overwrite' value
        4 - unable to retrieve file from URL
        5 - unable to create destination folder

    Raises:
        None
    '''

    src_url = attributes.get('src_url')
    if not src_url:
        return 1

    dst_url = attributes.get('dst_url')
    if not dst_url:
        return 2

    mode = attributes.get('mode')

    name = os.path.basename(src_url)
    dst_fp = os.path.join(dst_url, name)

    overwrite = attributes.get('overwrite') or 'replace'
    if overwrite not in OVERWRITE_VALUES:
        return 3

    if os.path.exists(dst_fp) and overwrite != 'if-missing':
        if overwrite == 'backup':
            backup = dst_fp + BACKUP_SUFFIX
        shutil.copy(dst_fp, backup)
    elif not os.path.exists(dst_url):
        try:
            os.mkdirs(dst_url)
        except OSError:
            return 5

    try:
        urllib.urlretrieve(src_url, dst_fp)
        if mode is not None:
            os.chmod(dst_fp, int(mode, 8))
    except:
        return 4


